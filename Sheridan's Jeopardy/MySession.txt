We use session because in client server architecture we use HTTP protocol which is a stateless protocol meaning it remembers nothing between every data being passed around. Now we use session to manage data, hold, and use or call it on another page if we need it. For example you login to your social media account, the server will process your request and make sure that the username and password are in the database and it matches. After that you will be redirected to the home page, the homepage will check if the parameter value of your username still exist and if not you will be redirected again to login page. And that is why session is important, it is use to maintain the data of a user. 

First, I created an HttpSession named "session". Then, I created an object of player class "player", set its name to what the user will input as their in-game name, and also set the user score to zero. The session will start by adding the "player" object into a sessionAttribute so we can access it accross the webpages. 

For the bonus pages, I generated 2 random number, save it in an integer variable, and check if they are the same number. If they are the same, I used while loop to iterate generating of number so that they will be a different numbers. After checking, these integer variable is saved into a sessionAttribute called bonus1 and bonus2. This is my way of assigning which of the 25 questions I have will be for the Daily Double.

Another use of session in my assignment is for disabling the buttons on the gameboard. Every button calls a request.getSession().getAttribute(), each of these session has name of their category plus their amount. For instance, request.getSession.getAttribute("Java100"). Everytime the user picks a question and answer it, a servlet will be called and set that session attribute to this string "disabled=\"disabled\" style=\"opacity: .5; text-decoration: line-through;\" id=\"noHover\"". This will refrain the user from picking the answered question over again. 

Also, once the user picked a question, it will send the data of the picked question to a servlet called PickQuestion. This servlet will get the category name and value of the question, look up the matching question in the GameQuestions class, then get all the information of that question and set each of it in a session attribute. This is what I came up with to call the question in the JSP page where the question and answer selection will be shown to the user. 

For the bet on the Daily Double, if the user picked a Daily Double question, it will go to a page where the user will be required to input an amount to bet. When a bet is succesfully made, a session attribute called bet will hold the value of the amount the user wagered. 

Lastly, at the end of the game, I have a session.invalidate so that every session made in the game will be destroyed if ever the player will decide to play the game again.